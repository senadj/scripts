########################################################################################
# LevelDB

if [ -z "$YOS" ]; then
echo -e "\n\n\nYOS not set.\nAborting build\n\n\n"
else

[ -d "$YLDB" ] || export YLDB=$YSW/`pwd | xargs basename`

if [ "$1" == "check" ]; then
############################ Check if exists
case $YOS in
  linux*) [ -d "$YLDB" ] && [ -f "`find $YLDB/lib/* -prune -name "*.so" | head -1`" ] && echo "found";;
  *) [ -d "$YLDB" ] && [ -f "$YLDB/lib/libleveldb.a" ] && echo "found";;
esac

else
############################ Build
case $YOS in
########################################## Linux
linux*)

make all libmemenv.a
mkdir -p $YLDB/include $YLDB/lib $YLDB/helpers/memenv
cp -r include/leveldb  $YLDB/include
cp helpers/memenv/memenv.h $YLDB/helpers/memenv/memenv.h
cp *.a *.so $YLDB/lib

;;
########################################## Mac OSX
darwin*)

CFLAGS="-isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.6.sdk -mmacosx-version-min=10.6"
TARGET_OS=Darwin OPT="${CFLAGS}" make libleveldb.a libmemenv.a
mkdir -p $YLDB/include $YLDB/lib $YLDB/helpers/memenv
cp -r include/leveldb  $YLDB/include
cp helpers/memenv/memenv.h $YLDB/helpers/memenv/memenv.h
cp *.a $YLDB/lib

;;
########################################## Windows
*)

TARGET_OS=NATIVE_WINDOWS OPT="-std=gnu++0x -msse2" LDFLAGS='-static -static-libgcc -s' make libleveldb.a libmemenv.a
mkdir -p $YLDB/include $YLDB/lib $YLDB/helpers/memenv
cp -r include/leveldb  $YLDB/include
cp helpers/memenv/memenv.h $YLDB/helpers/memenv/memenv.h
cp *.a $YLDB/lib

;;

esac

if ! grep YLDB $YSW/yconf > /dev/null; then echo "YLDB=$YLDB" >> $YSW/yconf; fi
fi
fi

