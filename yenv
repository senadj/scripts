[ -z "$YBASE" ] && { echo "YBASE not set. Aborting."; return 1; }
[ -d "$YBASE" ] || { echo "YBASE path invalid. Aborting."; return 1; }
[ -d "$YBASE/scripts" ] || { echo "scripts path invalid. Aborting."; return 1; }

alias ymake='make -f $YBASE/scripts/makefile'

YDL="$YBASE/downloads"
YDEPS="$YBASE/deps"

[ -d "$YDL" ] || mkdir -p $YDL
[ -d "$YDEPS" ] || mkdir -p $YDEPS
[ -d "$YBASE/gcc" ] || mkdir -p $YBASE/gcc
[ -d "$YBASE/codeblocks" ] || mkdir -p $YBASE/codeblocks

############# eXtract dependencies in YDL folder to YDEPS folder #############
xdeps () 
{
  if [ $# -eq 0 ]; then 
    echo -e "\nxdeps needs source filename argument.\n"
    ls -1 $YDL | sort
	echo -e "\npick one from list printed. "
	return 1
  fi

  [ -z "$YDL" ] && { echo "YDL not set. Aborting."; return 1; }
  [ -d "$YDL" ] || { echo "YDL not set correctly. Aborting."; return 1; }
  [ -z "$YDEPS" ] && { echo "YDEPS not set. Aborting."; return 1; }
  [ -d "$YDEPS" ] || { echo "YDEPS not set correctly. Aborting."; return 1; }
  [ -f "$YDL/$1" ] || { echo "File $YDEPS/$1 not Found. Aborting."; return 1; }

  case "$1" in
    *.tar.gz) 7za e -aoa $YDL/$1 -so | 7za x -aoa -si -ttar -o$YDEPS ;;
	*.tar.bz2) 7za e -aoa $YDL/$1 -so | 7za x -aoa -si -ttar -o$YDEPS ;;
    *.7z) 7za x -aoa $YDL/$1 -o$YDEPS ;;
    *) echo "File Format Unsupported $1" ;;
  esac
}

############# set Y vars using directories in YDEPS folder #############
sdeps()
{
for file in `find $YDEPS/* -prune -type d`
do
  filename=$(basename $file)

  if [ $# -gt 0 ]; then
    case $filename in
    $1*) : ;;
    *) filename= ;;
    esac
  fi

  case $filename in
    boost*) YBOO=$file
			echo "YBOO=$YBOO"
			export YBOO
			[ -d "$YBOO/stage/lib" ] && YBOOSUFFIX=`find $YBOO/stage/lib -name "libboost_filesystem*.a" | head -1 | awk -Ffilesystem '{print $(NF)}' | cut -d'.' -f1`
			echo "YBOOSUFFIX=$YBOOSUFFIX"
			export YBOOSUFFIX ;;
    openssl*) YOSSL=$file; echo "YOSSL=$YOSSL"; export YOSSL ;;
    db*) YBDB=$file; echo "YBDB=$YBDB"; export YBDB ;;
	leveldb*) YLDB=$file; echo "YLDB=$YLDB"; export YLDB ;;
    miniupnp*) YUPNP=$file; echo "YUPNP=$YUPNP"; export YUPNP ;;
    zlib*) YZLIB=$file; echo "YZLIB=$YZLIB"; export YZLIB ;;
    libpng*) YPNG=$file; echo "YPNG=$YPNG"; export YPNG ;;
    qrenc*) YQR=$file; echo "YQR=$YQR"; export YQR ;;
    qt*) YQT=$file; echo "YQT=$YQT"; export YQT ;;
	pcre*) YPCRE=$file; echo "YPCRE=$YPCRE"; export YPCRE ;;
	jansson*) YJANS=$file; echo "YJANS=$YJANS"; export YJANS ;;
	curl*) YCURL=$file; echo "YCURL=$YCURL"; export YCURL ;;
	wxWidgets*) YWX=$file; echo "YWX=$YWX"; export YWX ;;
  esac
done

}

############# unset Y env vars #############
udeps() 
{ 
unset YBOO; unset YBOOSUFFIX; unset YOSSL;unset YBDB;unset YUPNP;unset YZLIB;unset YPNG;unset YQR;unset YQT;unset YWX;unset YPCRE;unset YJANS;unset YCURL;unset YLDB;
echo -e "\nvariables unset:\nYBOO YOSSL YBDB YUPNP YZLIB YPNG YQR YQT YWX YPCRE YJANS YCURL YLDB"
}

############# find dependency starting with $1 in YDEPS folder #############
fdeps()
{ 
find $YDEPS/* -prune -type d -name "$1*" | sort; 
}

############# print current dependancies #############
pdeps()
{
env | grep "^Y" | egrep -v "^YDL|^YDEPS|^YBASE" | sort
}

############# Boost Library Suffix #############
yboostsuffix () 
{
find $YBOO/stage/lib -name "libboost_filesystem*.a" | head -1 | awk -Ffilesystem '{print $(NF)}' | cut -d'.' -f1
}

############# Print info from environment #############
yinfo () 
{
echo -e ""
set | grep "^build"
echo -e ""
set | grep "^Y"
echo -e ""
cat $YBASE/scripts/makefile | grep "^[A-z]" | grep -v "SELF_DIR" | awk '{print "ymake "$1}' | sed "s/://g"
}

##############################################################################
[ -f "$YBASE/scripts/ydeps" ] && source $YBASE/scripts/ydeps
[ -f "$YBASE/scripts/fbuilddeps" ] && source $YBASE/scripts/fbuilddeps

PATH=.:$YBASE/gcc/bin:/mingw32/bin:/usr/bin:/bin:`which cmd | awk '{print substr($0, 1, length($0)-4)}'`

[ -d "$YQT" ] && PATH=$PATH:$YQT/bin && export YQT
[ -d "$YWX" ] && PATH=$YWX/bin:$PATH && export YWX

[ -d "$YBOO" ] && export YBOO YBOOSUFFIX
[ -d "$YOSSL" ] && export YOSSL
[ -d "$YBDB" ] && export YBDB
[ -d "$YLDB" ] && export YLDB
[ -d "$YUPNP" ] && export YUPNP
[ -d "$YZLIB" ] && export YZLIB
[ -d "$YPNG" ] && export YPNG
[ -d "$YQR" ] && export YQR
[ -d "$YPCRE" ] && export YPCRE
[ -d "$YJANS" ] && export YJANS
[ -d "$YCURL" ] && export YCURL

export PATH YDEPS YDL
export -f yboostsuffix yinfo

